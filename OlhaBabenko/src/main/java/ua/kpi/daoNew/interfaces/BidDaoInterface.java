package ua.kpi.daoNew.interfaces;

import java.util.List;
import ua.kpi.model.Bid;

/**
 * Базовый интерфейс для работы с заявками пользователей (таблица Bids)
 *
 * @author Оля
 */
public interface BidDaoInterface {

    //МЕТОД ЗАПОЛНЕНИЯ ЗАЯВКИ ПОЛЬЗОВАТЕЛЕМ:
    //на вход : значения, которые надо занести в таблицу БД BIDS
    //возвращаемое значение : -
    //результат : занесение в таблицу BIDS нужных данных о заявке конкретного пользователя
    public void insertUserIntoBids(int tenant, int workType, int workScale, String timeToDoWish, String dateOfFilling, String status);

    //МЕТОД ПОЛУЧЕНИЯ ДАННЫХ О ЗАЯВКЕ ДЛЯ ВЫВОДА ТАБЛИЦЫ ЗАЯВОК ПОЛЬЗОВАТЕЛЯ:
    //на вход : ID пользователя, для которого будет выводится таблица
    //возвращаемое значение : список всех заявок, которые делал этот пользователь
    //результат : вывод всех заявок пользователя в таблицу на странице пользователя
    public List<Bid> makeBidsListForBidsTableOfTenant(int tenantID);

    //МЕТОД ПОЛУЧЕНИЯ ДАННЫХ О ВСЕХ НОВЫХ ЗАЯВКАХ ДЛЯ ЗАНЕСЕНИЯ В ПЛАН РАБОТ:
    //на вход : статус заявки (задаётся как "новая");
    //возвращаемое значение : список всех заявок, которые имеют статус "новая"
    //результат : вывод всех "новых" заявок в таблицу на странице админа
    public List<Bid> makeBidsListForBidsTableOfAllNewBids(String status);

    //МЕТОД ОБНОВЛЕНИЯ ДАННЫХ О СТАТУСЕ И ВРЕМЕНИ ВЫПОЛНЕНИЯ ЗАЯВКИ ПОСЛЕ ЕЁ ЗАНЕСЕНИЯ В ПЛАН РАБОТ:
    //на вход : новый статус заявки (задаётся как "принята"), время выполнения работ, ID заявки;
    //возвращаемое значение : -
    //результат : обновление данных о заявке в таблице БД BIDS
    public void updateBidsStatus(String statusNew, String timeToDoWishNew, int bidID);

    //МЕТОД ПОЛУЧЕНИЯ ДАННЫХ ЗАЯВКИ ПО ID ЗАЯВКИ ДЛЯ ЗАНЕСЕНИЯ В ПЛАН РАБОТ:
    //на вход : ID заявки;
    //возвращаемое значение : заявка пользователя
    //результат : получение заявки для последующего занесения её в план работ
    public Bid findBidByID(int bidID);
}
